{
	"info": {
		"_postman_id": "41b2406a-3d96-46c7-9998-714ab024f736",
		"name": "iac",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "abbreviations",
			"item": [
				{
					"name": "abbreviations",
					"item": [
						{
							"name": "post abbreviations",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "263c5d77-a194-4c75-b0ee-7a4ea7d400f9",
										"exec": [
											"if (pm.response.code === 201){",
											"    pm.environment.set(\"abbreviationId\", pm.response.json()._id);",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"elementLabel\": \"EBS\",\n\t\"description\": \"Amazon Elastic Block Storage\",\n\t\"keyLabel\": \"resourceType\",\n\t\"systemDefined\": true\n}"
								},
								"url": {
									"raw": "{{url}}/config/abbreviations",
									"host": [
										"{{url}}"
									],
									"path": [
										"config",
										"abbreviations"
									]
								}
							},
							"response": []
						},
						{
							"name": "* post abbreviations bulk",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "263c5d77-a194-4c75-b0ee-7a4ea7d400f9",
										"exec": [
											"if (pm.response.code === 201){",
											"    pm.environment.set(\"abbreviationId\", pm.response.json()._id);",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n\t{\n\t\t\"elementLabel\": \"AWS\",\n\t\t\"description\": \"Amazon Web Services Provider\",\n\t\t\"keyLabel\": \"provider\",\n\t\t\"systemDefined\": true\n\t},\n\t{\n\t\t\"elementLabel\": \"AZ\",\n\t\t\"description\": \"Microsoft Azure Provider\",\n\t\t\"keyLabel\": \"provider\",\n\t\t\"systemDefined\": true\n\t},\n\t{\n\t\t\"elementLabel\": \"PRD\",\n\t\t\"description\": \"Production Environment\",\n\t\t\"keyLabel\": \"environment\",\n\t\t\"systemDefined\": true\n\t},\n\t{\n\t\t\"elementLabel\": \"QAT\",\n\t\t\"description\": \"... Environment\",\n\t\t\"keyLabel\": \"environment\",\n\t\t\"systemDefined\": true\n\t},\n\t{\n\t\t\"elementLabel\": \"DEV\",\n\t\t\"description\": \"Development Environment\",\n\t\t\"keyLabel\": \"environment\",\n\t\t\"systemDefined\": true\n\t},\n\t{\n\t\t\"elementLabel\": \"SBX\",\n\t\t\"description\": \"Sandbox Environment\",\n\t\t\"keyLabel\": \"environment\",\n\t\t\"systemDefined\": true\n\t},\n\t{\n\t\t\"elementLabel\": \"SG\",\n\t\t\"description\": \"Sanlam Group Organization\",\n\t\t\"keyLabel\": \"groupOrganization\",\n\t\t\"systemDefined\": true\n\t},\n\t{\n\t\t\"elementLabel\": \"SPF\",\n\t\t\"description\": \"Sanlam Cluster\",\n\t\t\"keyLabel\": \"cluster\",\n\t\t\"systemDefined\": true\n\t},\n\t{\n\t\t\"elementLabel\": \"GLAC\",\n\t\t\"description\": \"Glacier business unit entity\",\n\t\t\"keyLabel\": \"businessEntity\",\n\t\t\"systemDefined\": true\n\t},\n\t{\n\t\t\"elementLabel\": \"INDF\",\n\t\t\"description\": \"Indfin business unit entity\",\n\t\t\"keyLabel\": \"businessEntity\",\n\t\t\"systemDefined\": true\n\t},\n\t{\n\t\t\"elementLabel\": \"EU1\",\n\t\t\"description\": \"AWS Ireland Datacenter Location\",\n\t\t\"keyLabel\": \"location\",\n\t\t\"systemDefined\": true\n\t},\n\t{\n\t\t\"elementLabel\": \"BDC\",\n\t\t\"description\": \"Sanlam Bellville HeadOffice Datacenter Location\",\n\t\t\"keyLabel\": \"location\",\n\t\t\"systemDefined\": true\n\t},\n\t{\n\t\t\"elementLabel\": \"EC2\",\n\t\t\"description\": \"Amazon Classic VM Compu resourceType\",\n\t\t\"keyLabel\": \"resourceType\",\n\t\t\"systemDefined\": true\n\t},\n\t{\n\t\t\"elementLabel\": \"S3\",\n\t\t\"description\": \"Amazon Blob Storage resourceType\",\n\t\t\"keyLabel\": \"resourceType\",\n\t\t\"systemDefined\": true\n\t}\n]\n"
								},
								"url": {
									"raw": "{{url}}/config/abbreviations/seedDefaults",
									"host": [
										"{{url}}"
									],
									"path": [
										"config",
										"abbreviations",
										"seedDefaults"
									]
								}
							},
							"response": []
						},
						{
							"name": "get abbreviations",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "fa03a707-0fad-4f66-8397-5da05ee3ee40",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/config/abbreviations/?element=^S",
									"host": [
										"{{url}}"
									],
									"path": [
										"config",
										"abbreviations",
										""
									],
									"query": [
										{
											"key": "element",
											"value": "^S"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "patch abbreviations",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"description\": \"VMware Cluster resourceType\"\n}"
								},
								"url": {
									"raw": "{{url}}/config/abbreviations/{{abbreviationId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"config",
										"abbreviations",
										"{{abbreviationId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "remove abbreviations",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{url}}/config/abbreviations/{{abbreviationId}}/?key=resourceType",
									"host": [
										"{{url}}"
									],
									"path": [
										"config",
										"abbreviations",
										"{{abbreviationId}}",
										""
									],
									"query": [
										{
											"key": "key",
											"value": "resourceType"
										}
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "defaults",
					"item": [
						{
							"name": "*post config",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "263c5d77-a194-4c75-b0ee-7a4ea7d400f9",
										"exec": [
											"if (pm.response.code === 201){",
											"    pm.environment.set(\"abbreviationId\", pm.response.json()._id);",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/config/tag/defaults",
									"host": [
										"{{url}}"
									],
									"path": [
										"config",
										"tag",
										"defaults"
									]
								}
							},
							"response": []
						},
						{
							"name": "get config",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "fa03a707-0fad-4f66-8397-5da05ee3ee40",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/config/tag/defaults",
									"host": [
										"{{url}}"
									],
									"path": [
										"config",
										"tag",
										"defaults"
									]
								}
							},
							"response": []
						},
						{
							"name": "*patch config",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"mandatoryTagsKeys\": [\n        \"account\",\n        \"environments\",\n        \"businessEntity\",\n        \"cluster\",\n        \"provider\",\n        \"groupOrganization\",\n        \"resourceType\",\n        \"application\",\n        \"deploymentId\",\n        \"accountId\"\n    ]\n}"
								},
								"url": {
									"raw": "{{url}}/config/tag/defaults",
									"host": [
										"{{url}}"
									],
									"path": [
										"config",
										"tag",
										"defaults"
									]
								}
							},
							"response": []
						},
						{
							"name": "remove config",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{url}}/config/tag/defaults",
									"host": [
										"{{url}}"
									],
									"path": [
										"config",
										"tag",
										"defaults"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "label",
					"item": [
						{
							"name": "* post label rds",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "263c5d77-a194-4c75-b0ee-7a4ea7d400f9",
										"exec": [
											"if (pm.response.code === 201){",
											"    pm.environment.set(\"labelId\", pm.response.json()._id);",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"resourceType\": \"RDS\"\n}"
								},
								"url": {
									"raw": "{{url}}/config/label{{connectId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"config",
										"label{{connectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "* post label ebs",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "263c5d77-a194-4c75-b0ee-7a4ea7d400f9",
										"exec": [
											"if (pm.response.code === 201){",
											"    pm.environment.set(\"labelId\", pm.response.json()._id);",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"resourceType\": \"EBS\"\n}"
								},
								"url": {
									"raw": "{{url}}/config/label{{connectId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"config",
										"label{{connectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "* post label sgrp",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "263c5d77-a194-4c75-b0ee-7a4ea7d400f9",
										"exec": [
											"if (pm.response.code === 201){",
											"    pm.environment.set(\"labelId\", pm.response.json()._id);",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"resourceType\": \"SGRP\",\n    \"keyMap\": [\n        \"resourceType\",\n        \"businessEntity\",\n        \"environments\",\n        \"application\"\n    ],\n    \"mandatoryConfigKeys\": [\n        \"port\",\n        \"direction\",\n        \"source\",\n        \"resource\"\n    ]\n}"
								},
								"url": {
									"raw": "{{url}}/config/label{{connectId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"config",
										"label{{connectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "* patch label sgrp",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bab46783-c523-46d8-add9-c6b39a529460",
										"exec": [
											"if (pm.response.code === 201){",
											"    pm.environment.set(\"labelId\", pm.response.json()._id);",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"resourceType\" : \"SGRP\",\n    \"keyMap\": [\n        \"resourceType\",\n        \"businessEntity\",\n        \"environments\",\n        \"application\"\n    ],\n    \"mandatoryConfigKeys\": [\n        \"port\",\n        \"direction\",\n        \"source\",\n        \"forResource\",\n        \"toResource\"\n    ]\n}"
								},
								"url": {
									"raw": "{{url}}/config/label/{{connectId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"config",
										"label",
										"{{connectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "*patch label vpc",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2da0b0cb-1f95-49b8-af6f-704b516a986a",
										"exec": [
											"if (pm.response.code === 201){",
											"    pm.environment.set(\"labelId\", pm.response.json()._id);",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"resourceType\" : \"VPC\",\n    \"keyMap\": [\n        \"resourceType\",\n        \"businessEntity\",\n        \"environments\",\n        \"locations\"\n    ],\n    \"padding\": \"000\",\n    \"mandatoryTagsKeys\": [\n    \t\"locations\"\n    \t]\n}"
								},
								"url": {
									"raw": "{{url}}/config/label/{{connectId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"config",
										"label",
										"{{connectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "*patch label ebs",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ae5fc3db-cb64-4515-9d2d-97d752851f48",
										"exec": [
											"if (pm.response.code === 201){",
											"    pm.environment.set(\"labelId\", pm.response.json()._id);",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"resourceType\" : \"EBS\",\n    \"keyMap\": [\n        \"resourceType\",\n        \"businessEntity\",\n        \"environments\",\n        \"application\"\n    ],\n    \"mandatoryConfigKeys\": [\n        \"path\",\n        \"size\",\n        \"count\"\n    ]\n}"
								},
								"url": {
									"raw": "{{url}}/config/label/{{connectId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"config",
										"label",
										"{{connectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "*patch label ec2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c5fa7e1b-f8a7-4e16-b5af-5352d379e29a",
										"exec": [
											"if (pm.response.code === 201){",
											"    pm.environment.set(\"labelId\", pm.response.json()._id);",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"resourceType\" : \"EC2\",\n\t\"isUpperCase\": false,\n\t\"stringDelimiter\": \"-\",\n   \t\"mandatoryConfigKeys\": [\n   \t\t\t\"count\", \n   \t\t\t\"template\", \n   \t\t\t\"compuTier\"\n   \t\t],\n   \t\"mandatoryTagsKeys\": [\n   \t\t\t\"perimeters\"\n   \t\t]\n}"
								},
								"url": {
									"raw": "{{url}}/config/label/{{connectId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"config",
										"label",
										"{{connectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "*patch label rds",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "62c87886-0023-4302-9e5e-24852bec1052",
										"exec": [
											"if (pm.response.code === 201){",
											"    pm.environment.set(\"labelId\", pm.response.json()._id);",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"resourceType\" : \"RDS\"\n}"
								},
								"url": {
									"raw": "{{url}}/config/label/{{connectId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"config",
										"label",
										"{{connectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "get labels",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/config/label",
									"host": [
										"{{url}}"
									],
									"path": [
										"config",
										"label"
									]
								}
							},
							"response": []
						},
						{
							"name": "get label id",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/config/label/{{labelId}}?populate=true",
									"host": [
										"{{url}}"
									],
									"path": [
										"config",
										"label",
										"{{labelId}}"
									],
									"query": [
										{
											"key": "populate",
											"value": "true"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "patch computiers",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"tier\": [\"db.t2.small\", \"db.t2.large\"]\n}"
								},
								"url": {
									"raw": "{{url}}/config/label/{{labelId}}?tier=compu",
									"host": [
										"{{url}}"
									],
									"path": [
										"config",
										"label",
										"{{labelId}}"
									],
									"query": [
										{
											"key": "tier",
											"value": "compu"
										}
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			]
		},
		{
			"name": "connector",
			"item": [
				{
					"name": "*create connector aws",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "dccb7fa9-97a5-4452-bd0b-bac37a4268fa",
								"exec": [
									"if (pm.response.code === 201){",
									"    pm.environment.set(\"connectId\", pm.response.json()._id);",
									"}",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"provider\": \"aws\",\n\t\"groupOrganization\": \"MO\",\n\t\"location\": \"eu-west-1\",\n\t\"VPCKeywordRegex\": []\n}"
						},
						"url": {
							"raw": "{{url}}/connectors",
							"host": [
								"{{url}}"
							],
							"path": [
								"connectors"
							]
						}
					},
					"response": []
				},
				{
					"name": "remove connector",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/connectors/{{connectId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"connectors",
								"{{connectId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "patch connector",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"disableDiscovery\": false,\n\t\"VPCKeywordRegex\": [\"\"]\n}"
						},
						"url": {
							"raw": "{{url}}/connectors/{{connectId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"connectors",
								"{{connectId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get connectors",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/connectors",
							"host": [
								"{{url}}"
							],
							"path": [
								"connectors"
							]
						}
					},
					"response": []
				},
				{
					"name": "get connector id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/connectors/{{connectId}}?populate=true",
							"host": [
								"{{url}}"
							],
							"path": [
								"connectors",
								"{{connectId}}"
							],
							"query": [
								{
									"key": "populate",
									"value": "true"
								}
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "28838a4b-e219-4693-89cf-415826debe3d",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "e6d3ee7e-c45f-42cb-b5f2-cf880e7558e7",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "context",
			"item": [
				{
					"name": "post tenants",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "263c5d77-a194-4c75-b0ee-7a4ea7d400f9",
								"exec": [
									"if (pm.response.code === 201){",
									"    pm.environment.set(\"tenantId\", pm.response.json()._id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"cluster\": \"LOOP\",\n\t\"businessEntity\": \"LOOP\"\n}"
						},
						"url": {
							"raw": "{{url}}/context/{{connectId}}?config=tenants",
							"host": [
								"{{url}}"
							],
							"path": [
								"context",
								"{{connectId}}"
							],
							"query": [
								{
									"key": "config",
									"value": "tenants"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "post networks",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"network\": \"external\",\n\t\"label\": \"portGroup\",\n\t\"networkAddress\": \"196.27.206.0\"\n}"
						},
						"url": {
							"raw": "{{url}}/context/{{connectId}}?config=networks",
							"host": [
								"{{url}}"
							],
							"path": [
								"context",
								"{{connectId}}"
							],
							"query": [
								{
									"key": "config",
									"value": "networks"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "* post resources",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"resourceType\": \"TMP\",\n\t\"logicalName\": \"linuxUbuntuBase18\"\n}"
						},
						"url": {
							"raw": "{{url}}/context/{{connectId}}?config=resources",
							"host": [
								"{{url}}"
							],
							"path": [
								"context",
								"{{connectId}}"
							],
							"query": [
								{
									"key": "config",
									"value": "resources"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "*patch tenants",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "81554725-4bad-4baf-a2fd-36ea3196eb29",
								"exec": [
									"if (pm.response.code === 201){",
									"    pm.environment.set(\"tenantId\", pm.response.json()._id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"cluster\": \"MYLOFT\",\n    \"businessEntity\": \"MYLOFT\"\n}"
						},
						"url": {
							"raw": "{{url}}/context/{{connectId}}?config=tenants&cluster=CLU&businessEntity=BUEN",
							"host": [
								"{{url}}"
							],
							"path": [
								"context",
								"{{connectId}}"
							],
							"query": [
								{
									"key": "config",
									"value": "tenants"
								},
								{
									"key": "cluster",
									"value": "CLU"
								},
								{
									"key": "businessEntity",
									"value": "BUEN"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "patch environments",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"other\": \"admin\"\n}"
						},
						"url": {
							"raw": "{{url}}/context/{{connectId}}?config=environments",
							"host": [
								"{{url}}"
							],
							"path": [
								"context",
								"{{connectId}}"
							],
							"query": [
								{
									"key": "config",
									"value": "environments"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "patch locations",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"primary\": \"eu-west-1\",\n    \"secondary\": \"bdc\"\n}"
						},
						"url": {
							"raw": "{{url}}/context/{{connectId}}?config=locations",
							"host": [
								"{{url}}"
							],
							"path": [
								"context",
								"{{connectId}}"
							],
							"query": [
								{
									"key": "config",
									"value": "locations"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "patch networks",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"network\": \"internal\",\n    \"label\": \"vExternal16\",\n    \"networkAddress\": \"10.12.110.0\"\n}"
						},
						"url": {
							"raw": "{{url}}/context/{{connectId}}?config=networks",
							"host": [
								"{{url}}"
							],
							"path": [
								"context",
								"{{connectId}}"
							],
							"query": [
								{
									"key": "config",
									"value": "networks"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "*patch templates",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"logicalName\": \"linuxUbuntuBase18\",\n\t\"logicalId\": \"ami-08f053fa3d25478f4\"\n}"
						},
						"url": {
							"raw": "{{url}}/context/{{connectId}}?config=resources",
							"host": [
								"{{url}}"
							],
							"path": [
								"context",
								"{{connectId}}"
							],
							"query": [
								{
									"key": "config",
									"value": "resources"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "*patch perimeters",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"backOfficeLabel\": \"INT\",\n    \"perimeterLabel\": \"EXT\",\n    \"breakoutLabel\": \"IBO\",\n    \"aZ\": [\"a\", \"b\", \"c\"]\n}"
						},
						"url": {
							"raw": "{{url}}/context/{{connectId}}?config=perimeters",
							"host": [
								"{{url}}"
							],
							"path": [
								"context",
								"{{connectId}}"
							],
							"query": [
								{
									"key": "config",
									"value": "perimeters"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "misc",
			"item": [
				{
					"name": "get misc id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "27374e20-f973-49fc-a680-dc8c3d8dc4b5",
								"exec": [
									"if (pm.response.code === 200){",
									"    pm.environment.set(\"miscId\", pm.response.json()[0]._id);",
									"}",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/misc?owner={{connectId}}&author={{tenantId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"misc"
							],
							"query": [
								{
									"key": "owner",
									"value": "{{connectId}}"
								},
								{
									"key": "author",
									"value": "{{tenantId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "patch misc config",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"projectLabel\": \"ST-SB000\"\n}"
						},
						"url": {
							"raw": "{{url}}/misc/{{miscId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"misc",
								"{{miscId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "*generate group ou",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/misc/{{connectId}}/groupAccounts?enable=network",
							"host": [
								"{{url}}"
							],
							"path": [
								"misc",
								"{{connectId}}",
								"groupAccounts"
							],
							"query": [
								{
									"key": "enable",
									"value": "network"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "*generate tenant ou",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/misc/{{tenantId}}/tenantAccounts",
							"host": [
								"{{url}}"
							],
							"path": [
								"misc",
								"{{tenantId}}",
								"tenantAccounts"
							]
						}
					},
					"response": []
				},
				{
					"name": "*generate project ou",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/misc/{{tenantId}}/projectAccounts",
							"host": [
								"{{url}}"
							],
							"path": [
								"misc",
								"{{tenantId}}",
								"projectAccounts"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "resource",
			"item": [
				{
					"name": "test-resource",
					"item": [
						{
							"name": "post deployment create vpc",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "db79db56-8a3a-4323-858d-0b12f9ea6a84",
										"exec": [
											"if (pm.response.code === 201){",
											"    pm.environment.set(\"deploymentId\", pm.response.json()['deploymentId']);",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"account\": \"MYLOFT-SBX\",\n\t\"resourceType\": \"VPC\",\n\t\"provider\": \"AWS\",\n\t\"runAs\": \"teraformRunAs\",\n\t\"application\": \"COREINFRA\",\n\t\"locations\": \"primary\"\n}"
								},
								"url": {
									"raw": "{{url}}/resources/create",
									"host": [
										"{{url}}"
									],
									"path": [
										"resources",
										"create"
									]
								}
							},
							"response": []
						},
						{
							"name": "post deployment create ec2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "db79db56-8a3a-4323-858d-0b12f9ea6a84",
										"exec": [
											"if (pm.response.code === 201){",
											"    pm.environment.set(\"deploymentId\", pm.response.json()['deploymentId']);",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"account\": \"MYLOFT-SBX\",\n\t\"resourceType\": \"EC2\",\n\t\"provider\": \"AWS\",\n\t\"count\": 2,\n\t\"template\": \"linuxUbuntuBase18\",\n\t\"compuTier\": \"bob\",\n\t\"application\": \"IPAM\",\n\t\"perimeters\": \"perimeter\"\n}"
								},
								"url": {
									"raw": "{{url}}/resources/create",
									"host": [
										"{{url}}"
									],
									"path": [
										"resources",
										"create"
									]
								}
							},
							"response": []
						},
						{
							"name": "post deployment create ebs",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "db79db56-8a3a-4323-858d-0b12f9ea6a84",
										"exec": [
											"if (pm.response.code === 201){",
											"    pm.environment.set(\"deploymentId\", pm.response.json()['deploymentId']);",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"account\": \"MYLOFT-SBX\",\n\t\"resourceType\": \"EBS\",\n\t\"provider\": \"AWS\",\n\t\"application\": \"IPAM\",\n\t\"path\": \"/dev/sdf\",\n\t\"size\": 1,\n\t\"count\": 1\n}"
								},
								"url": {
									"raw": "{{url}}/resources/create?deploymentId={{deploymentId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"resources",
										"create"
									],
									"query": [
										{
											"key": "deploymentId",
											"value": "{{deploymentId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "post deployment create rds",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "db79db56-8a3a-4323-858d-0b12f9ea6a84",
										"exec": [
											"if (pm.response.code === 201){",
											"    pm.environment.set(\"deploymentId\", pm.response.json()['deploymentId']);",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"account\": \"MYLOFT-SBX\",\n\t\"resourceType\": \"RDS\",\n\t\"provider\": \"AWS\",\n\t\"application\": \"IPAM\",\n\t\"dbname\": \"default\",\n\t\"engine\": \"mariadb\",\n\t\"majorRelease\": \"5.7\",\n\t\"minorRelease\": \"19\",\n\t\"size\": 1,\n\t\"compuTier\": \"db.t2.small\"\n}"
								},
								"url": {
									"raw": "{{url}}/resources/create?deploymentId={{deploymentId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"resources",
										"create"
									],
									"query": [
										{
											"key": "deploymentId",
											"value": "{{deploymentId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "post deployment create sgrp",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "db79db56-8a3a-4323-858d-0b12f9ea6a84",
										"exec": [
											"if (pm.response.code === 201){",
											"    pm.environment.set(\"deploymentId\", pm.response.json()['deploymentId']);",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"account\": \"MYLOFT-SBX\",\n\t\"resourceType\": \"SGRP\",\n\t\"provider\": \"AWS\",\n\t\"application\": \"TEST\",\n\t\"port\": \"22\",\n\t\"source\": \"0.0.0.0/0\",\n\t\"direction\": \"ingress\",\n\t\"forResource\": \"EC2\",\n\t\"toResource\": \"SELF\"\n}"
								},
								"url": {
									"raw": "{{url}}/resources/create?deploymentId={{deploymentId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"resources",
										"create"
									],
									"query": [
										{
											"key": "deploymentId",
											"value": "{{deploymentId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "post security group rules",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"port\": \"3309\",\n\t\"source\": \"sg-\",\n\t\"direction\": \"egress\",\n\t\"forResource\": \"EC2\",\n\t\"toResource\": \"RDS\"\n}"
								},
								"url": {
									"raw": "{{url}}/resources/add/rule/{{deploymentId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"resources",
										"add",
										"rule",
										"{{deploymentId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "post deployment multiple create",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "db79db56-8a3a-4323-858d-0b12f9ea6a84",
										"exec": [
											"if (pm.response.code === 201){",
											"    pm.environment.set(\"deploymentId\", pm.response.json()['deploymentId']);",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"account\": \"MYLOFT-SBX\",\n\t\"resourceType\": [\"EC2\", \"EC2\"],\n\t\"provider\": \"AWS\",\n\t\"count\": 1,\n\t\"template\": \"linuxUbuntuBase18\",\n\t\"compuTier\": \"CT1\",\n\t\"perimeters\": \"perimeter\",\n\t\"application\": \"TESTAPP\"\n}"
								},
								"url": {
									"raw": "{{url}}/resources/create/multiple",
									"host": [
										"{{url}}"
									],
									"path": [
										"resources",
										"create",
										"multiple"
									]
								}
							},
							"response": []
						},
						{
							"name": "get deployment query nil id",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/resources/query/5d9ef9c9b4d594138c64a819?document=resources",
									"host": [
										"{{url}}"
									],
									"path": [
										"resources",
										"query",
										"5d9ef9c9b4d594138c64a819"
									],
									"query": [
										{
											"key": "document",
											"value": "resources"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "patch deployment status nil id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "76bcaa30-c600-45a0-8aaa-44be376e0a49",
										"exec": [
											"if (pm.response.code === 200){",
											"    pm.environment.set(\"deploymentId\", pm.response.json()._id);",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/resources/status/5d975929857d8109c03287ba?state=0",
									"host": [
										"{{url}}"
									],
									"path": [
										"resources",
										"status",
										"5d975929857d8109c03287ba"
									],
									"query": [
										{
											"key": "state",
											"value": "0"
										}
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "test-discovery",
					"item": [
						{
							"name": "get resource discovery",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/resources/discovery/{{connectId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"resources",
										"discovery",
										"{{connectId}}"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "post deployment create vpc",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "db79db56-8a3a-4323-858d-0b12f9ea6a84",
								"exec": [
									"if (pm.response.code === 201){",
									"    pm.environment.set(\"deploymentId\", pm.response.json()['tagging']['deploymentId']);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"account\": \"MYLOFT-SBX\",\n\t\"resourceType\": \"SGRP\",\n\t\"provider\": \"AWS\",\n\t\"application\": \"TEST\",\n\t\"port\": \"22:3306\",\n\t\"source\": \"0.0.0.0/0\",\n\t\"direction\": \"egress\"\n}"
						},
						"url": {
							"raw": "{{url}}/resources/create",
							"host": [
								"{{url}}"
							],
							"path": [
								"resources",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "post deployment multiple create state",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "db79db56-8a3a-4323-858d-0b12f9ea6a84",
								"exec": [
									"if (pm.response.code === 201){",
									"    pm.environment.set(\"deploymentId\", pm.response.json().deploymentId)",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"account\": \"MYLOFT-SBX\",\n\t\"resourceType\": \"STATE\",\n\t\"provider\": \"AWS\",\n\t\"runAs\": \"terraformRunAs\",\n\t\"application\": \"TFSTATE\"\n}"
						},
						"url": {
							"raw": "{{url}}/resources/create/multiple",
							"host": [
								"{{url}}"
							],
							"path": [
								"resources",
								"create",
								"multiple"
							]
						}
					},
					"response": []
				},
				{
					"name": "get all deployments",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/resources/deployments",
							"host": [
								"{{url}}"
							],
							"path": [
								"resources",
								"deployments"
							]
						}
					},
					"response": []
				},
				{
					"name": "get deployment query id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/resources/query/{{deploymentId}}?document=security",
							"host": [
								"{{url}}"
							],
							"path": [
								"resources",
								"query",
								"{{deploymentId}}"
							],
							"query": [
								{
									"key": "document",
									"value": "security"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "patch deployment status",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/resources/status/{{deploymentId}}?state=0",
							"host": [
								"{{url}}"
							],
							"path": [
								"resources",
								"status",
								"{{deploymentId}}"
							],
							"query": [
								{
									"key": "state",
									"value": "0"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "patch deployment resource",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{url}}/resources/update/{{deploymentId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"resources",
								"update",
								"{{deploymentId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "remove resource",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/resources/delete/5d9ddd12bfbb3129a694a521",
							"host": [
								"{{url}}"
							],
							"path": [
								"resources",
								"delete",
								"5d9ddd12bfbb3129a694a521"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "taggings",
			"item": [
				{
					"name": "get tag",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/taggings",
							"host": [
								"{{url}}"
							],
							"path": [
								"taggings"
							]
						}
					},
					"response": []
				},
				{
					"name": "get category",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/taggings?categories=true",
							"host": [
								"{{url}}"
							],
							"path": [
								"taggings"
							],
							"query": [
								{
									"key": "categories",
									"value": "true"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "deprecate-label",
			"item": [
				{
					"name": "get resources logicalName ec2",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"account\" : \"SGTI-ST-SB001\",\n\t\"resourceType\" : \"EC2\"\n}"
						},
						"url": {
							"raw": "{{url}}/resources/labelGenerator?seed=true",
							"host": [
								"{{url}}"
							],
							"path": [
								"resources",
								"labelGenerator"
							],
							"query": [
								{
									"key": "seed",
									"value": "true"
								}
							]
						}
					},
					"response": [
						{
							"name": "vm",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"account\" : \"GLAC-SPF-QAT\",\n\t\"resourceType\" : \"VM\"\n}"
								},
								"url": {
									"raw": "{{url}}/resources/logicalName",
									"host": [
										"{{url}}"
									],
									"path": [
										"resources",
										"logicalName"
									]
								}
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						},
						{
							"name": "vpc",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"account\" : \"GLAC-SPF-QAT\",\n\t\"resourceType\" : \"VPC\"\n}"
								},
								"url": {
									"raw": "{{url}}/resources/logicalName",
									"host": [
										"{{url}}"
									],
									"path": [
										"resources",
										"logicalName"
									]
								}
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "get resources logicalName dyn",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"account\" : \"INDF-SPF-QAT\",\n\t\"resourceType\" : \"DYN\"\n}"
						},
						"url": {
							"raw": "{{url}}/resources/labelGenerator",
							"host": [
								"{{url}}"
							],
							"path": [
								"resources",
								"labelGenerator"
							]
						}
					},
					"response": [
						{
							"name": "vm",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"account\" : \"GLAC-SPF-QAT\",\n\t\"resourceType\" : \"VM\"\n}"
								},
								"url": {
									"raw": "{{url}}/resources/logicalName",
									"host": [
										"{{url}}"
									],
									"path": [
										"resources",
										"logicalName"
									]
								}
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						},
						{
							"name": "vpc",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"account\" : \"GLAC-SPF-QAT\",\n\t\"resourceType\" : \"VPC\"\n}"
								},
								"url": {
									"raw": "{{url}}/resources/logicalName",
									"host": [
										"{{url}}"
									],
									"path": [
										"resources",
										"logicalName"
									]
								}
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "get resources logicalName s3",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"account\" : \"INDF-SPF-QAT\",\n\t\"resourceType\" : \"S3\"\n}"
						},
						"url": {
							"raw": "{{url}}/resources/labelGenerator",
							"host": [
								"{{url}}"
							],
							"path": [
								"resources",
								"labelGenerator"
							]
						}
					},
					"response": [
						{
							"name": "vpc",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"account\" : \"GLAC-SPF-QAT\",\n\t\"resourceType\" : \"VPC\"\n}"
								},
								"url": {
									"raw": "{{url}}/resources/logicalName",
									"host": [
										"{{url}}"
									],
									"path": [
										"resources",
										"logicalName"
									]
								}
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						},
						{
							"name": "vm",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"account\" : \"GLAC-SPF-QAT\",\n\t\"resourceType\" : \"VM\"\n}"
								},
								"url": {
									"raw": "{{url}}/resources/logicalName",
									"host": [
										"{{url}}"
									],
									"path": [
										"resources",
										"logicalName"
									]
								}
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "get resources logicalName ecs",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"account\" : \"INDF-SPF-QAT\",\n\t\"resourceType\" : \"ECS\"\n}"
						},
						"url": {
							"raw": "{{url}}/resources/labelGenerator",
							"host": [
								"{{url}}"
							],
							"path": [
								"resources",
								"labelGenerator"
							]
						}
					},
					"response": [
						{
							"name": "vm",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"account\" : \"GLAC-SPF-QAT\",\n\t\"resourceType\" : \"VM\"\n}"
								},
								"url": {
									"raw": "{{url}}/resources/logicalName",
									"host": [
										"{{url}}"
									],
									"path": [
										"resources",
										"logicalName"
									]
								}
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						},
						{
							"name": "vpc",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"account\" : \"GLAC-SPF-QAT\",\n\t\"resourceType\" : \"VPC\"\n}"
								},
								"url": {
									"raw": "{{url}}/resources/logicalName",
									"host": [
										"{{url}}"
									],
									"path": [
										"resources",
										"logicalName"
									]
								}
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "get resources logicalName bean",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"account\" : \"INDF-SPF-QAT\",\n\t\"resourceType\" : \"BEAN\"\n}"
						},
						"url": {
							"raw": "{{url}}/resources/labelGenerator",
							"host": [
								"{{url}}"
							],
							"path": [
								"resources",
								"labelGenerator"
							]
						}
					},
					"response": [
						{
							"name": "vpc",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"account\" : \"GLAC-SPF-QAT\",\n\t\"resourceType\" : \"VPC\"\n}"
								},
								"url": {
									"raw": "{{url}}/resources/logicalName",
									"host": [
										"{{url}}"
									],
									"path": [
										"resources",
										"logicalName"
									]
								}
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						},
						{
							"name": "vm",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"account\" : \"GLAC-SPF-QAT\",\n\t\"resourceType\" : \"VM\"\n}"
								},
								"url": {
									"raw": "{{url}}/resources/logicalName",
									"host": [
										"{{url}}"
									],
									"path": [
										"resources",
										"logicalName"
									]
								}
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "get resources logicalName vpc",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"account\" : \"INDF-SPF-QAT\",\n\t\"resourceType\" : \"VPC\"\n}"
						},
						"url": {
							"raw": "{{url}}/resources/labelGenerator",
							"host": [
								"{{url}}"
							],
							"path": [
								"resources",
								"labelGenerator"
							]
						}
					},
					"response": [
						{
							"name": "vpc",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"account\" : \"GLAC-SPF-QAT\",\n\t\"resourceType\" : \"VPC\"\n}"
								},
								"url": {
									"raw": "{{url}}/resources/logicalName",
									"host": [
										"{{url}}"
									],
									"path": [
										"resources",
										"logicalName"
									]
								}
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						},
						{
							"name": "vm",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"account\" : \"GLAC-SPF-QAT\",\n\t\"resourceType\" : \"VM\"\n}"
								},
								"url": {
									"raw": "{{url}}/resources/logicalName",
									"host": [
										"{{url}}"
									],
									"path": [
										"resources",
										"logicalName"
									]
								}
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						}
					]
				}
			]
		},
		{
			"name": "deprecate-private",
			"item": [
				{
					"name": "connector",
					"item": [
						{
							"name": "create connector vsphere",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "dccb7fa9-97a5-4452-bd0b-bac37a4268fa",
										"exec": [
											"if (pm.response.code === 201){",
											"    pm.environment.set(\"connectId\", pm.response.json()._id);",
											"}",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"provider\": \"vsphere\",\n\t\"instance\": \"10.12.75.52\",\n\t\"dataCenterRegex\": \"(?!DC-CCC)(Sanlam - CDC)\",\n\t\"clusterRegex\": \"(^SLM)\",\n\t\"networkRegex\": \"(^vExternal80$|vExternal67|vExternal16$)\",\n\t\"networkQueryString\": \"?filter.datacenters=&filter.types=STANDARD_PORTGROUP\",\n\t\"datastoreRegex\": \"(?!-local)(SLM..-)\",\n\t\"datastoreQueryString\": \"?filter.datacenters=&filter.types=VMFS&filter.folders=\",\n\t\"clusterQueryString\": \"?filter.datacenters=\",\n\t\"folderRegex\": \"(?!^datastore$)(SLM)\",\n\t\"folderQueryString\": \"?filter.datacenters=\"\n}"
								},
								"url": {
									"raw": "{{url}}/pri/connectors",
									"host": [
										"{{url}}"
									],
									"path": [
										"pri",
										"connectors"
									]
								}
							},
							"response": []
						},
						{
							"name": "get connector",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/pri/connectors",
									"host": [
										"{{url}}"
									],
									"path": [
										"pri",
										"connectors"
									]
								}
							},
							"response": []
						},
						{
							"name": "update connector",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"disableDiscovery\": false,\n\t\"dataCenterRegex\": \"(?!DC-CCC)(Sanlam - CDC)\",\n\t\"clusterRegex\": \"(^SLM)\",\n\t\"templates\": [\"PAMCOTMPWIN2016\", \"PAMCOTMPLINUXRHEL7\"]\n}"
								},
								"url": {
									"raw": "{{url}}/pri/connectors/{{connectId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"pri",
										"connectors",
										"{{connectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "remove connector",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{url}}/pri/connectors/{{connectId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"pri",
										"connectors",
										"{{connectId}}"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "network",
					"item": [
						{
							"name": "get networks",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/pri/networks",
									"host": [
										"{{url}}"
									],
									"path": [
										"pri",
										"networks"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "cluster",
					"item": [
						{
							"name": "get cluster",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/pri/clusters",
									"host": [
										"{{url}}"
									],
									"path": [
										"pri",
										"clusters"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "datacenter",
					"item": [
						{
							"name": "get datacenters",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/pri/datacenters",
									"host": [
										"{{url}}"
									],
									"path": [
										"pri",
										"datacenters"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "datastore",
					"item": [
						{
							"name": "get datastores",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/pri/datastores",
									"host": [
										"{{url}}"
									],
									"path": [
										"pri",
										"datastores"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "vm",
					"item": [
						{
							"name": "new vm",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a4a74867-97eb-4d12-903d-32470c7155a7",
										"exec": [
											"if (pm.response.code === 201){",
											"    pm.environment.set(\"vmId\", pm.response.json().vm._id);",
											"}",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"tenantName\": \"SPF\",\n\t\"location\": \"CDC01\",\n\t\"environment\": \"development\",\n\t\"provider\": \"vsphere\",\n\t\"network\": \"local\",\n\t\"template\": \"winStd2016Base\",\n\t\"cpu\": \"2\",\n\t\"mem\": \"1024\",\n\t\"dataDisks\": [\"1:10\",\"2:10\"],\n\t\"fqdn\": \"mytest.unknown.co.za\",\n\t\"costCenter\": \"BCX0001\",\n\t\"application\": \"demo\"\n}"
								},
								"url": {
									"raw": "{{url}}/pri/vms/build?connector={{connectId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"pri",
										"vms",
										"build"
									],
									"query": [
										{
											"key": "connector",
											"value": "{{connectId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "get vm",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/pri/vms",
									"host": [
										"{{url}}"
									],
									"path": [
										"pri",
										"vms"
									]
								}
							},
							"response": []
						},
						{
							"name": "get vm id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "057c53d2-797a-4aeb-a503-93c6041e584a",
										"exec": [
											"if (pm.response.code === 200){",
											"    pm.environment.set(\"vmId\", pm.response.json().vm._id);",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/pri/vms/{{vmId}}?populate=true",
									"host": [
										"{{url}}"
									],
									"path": [
										"pri",
										"vms",
										"{{vmId}}"
									],
									"query": [
										{
											"key": "populate",
											"value": "true"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "update vm id",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"memoryMBCount\": \"2048\",\n\t\"dataDisks\": [\n\t\t\"1:10\",\n\t\t\"2:20\"\n\t]\n}"
								},
								"url": {
									"raw": "{{url}}/pri/vms/{{vmId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"pri",
										"vms",
										"{{vmId}}"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "5da0426b-11e7-4c0e-bd11-e06749cad598",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "8221d6fa-3d74-42e1-8dc4-77ae91d455f9",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"_postman_isSubFolder": true
				}
			]
		},
		{
			"name": "deprecate-public",
			"item": [
				{
					"name": "connector",
					"item": [
						{
							"name": "create connector aws",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "dccb7fa9-97a5-4452-bd0b-bac37a4268fa",
										"exec": [
											"if (pm.response.code === 201){",
											"    pm.environment.set(\"connectId\", pm.response.json()._id);",
											"}",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"provider\": \"aws\",\n\t\"instance\": \"itiss\",\n\t\"location\": \"eu-west-1\",\n\t\"virtualCloudKeywordRegex\": [\"itiss\", \"!prod\"]\n}"
								},
								"url": {
									"raw": "{{url}}/pub/connectors",
									"host": [
										"{{url}}"
									],
									"path": [
										"pub",
										"connectors"
									]
								}
							},
							"response": []
						},
						{
							"name": "remove connector",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{url}}/pub/connectors/{{connectId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"pub",
										"connectors",
										"{{connectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "get connector",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/pub/connectors",
									"host": [
										"{{url}}"
									],
									"path": [
										"pub",
										"connectors"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "state",
					"item": [
						{
							"name": "create state",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "44685a93-60df-47e5-91cf-c129d5f8e1d4",
										"exec": [
											"if (pm.response.code === 201){",
											"    pm.environment.set(\"stateId\", pm.response.json().state._id);",
											"}",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"tenantName\": \"default\",\n\t\"location\": \"A\",\n\t\"environment\": \"proof_of_concept\",\n\t\"provider\": \"aws\",\n\t\"network\": \"local\",\n\t\"template\": \"amazonLinuxBase\",\n\t\"fqdn\": \"mytest.unknown.co.za\",\n\t\"costCenter\": \"BCX0001\",\n\t\"application\": \"demo\",\n\t\"isEnabled\": true\n}"
								},
								"url": {
									"raw": "{{url}}/pub/states?connector={{connectId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"pub",
										"states"
									],
									"query": [
										{
											"key": "connector",
											"value": "{{connectId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "remove state",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{url}}/pub/states/{{stateId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"pub",
										"states",
										"{{stateId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "get state id",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/pub/states/{{stateId}}?populate=true",
									"host": [
										"{{url}}"
									],
									"path": [
										"pub",
										"states",
										"{{stateId}}"
									],
									"query": [
										{
											"key": "populate",
											"value": "true"
										}
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "VirtualCloud",
					"item": [
						{
							"name": "get vpc",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/pub/virtualCloud",
									"host": [
										"{{url}}"
									],
									"path": [
										"pub",
										"virtualCloud"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "abcb534f-0eb7-4e4b-9640-a59e74c7880f",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "5cdec365-9441-460f-90d6-71602a374f2a",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"_postman_isSubFolder": true
				}
			]
		}
	]
}